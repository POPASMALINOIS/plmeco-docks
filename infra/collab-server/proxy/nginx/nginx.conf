# Nginx como reverse proxy con TLS para y-websocket
# Reemplaza collab.example.com y rutas de certs seg√∫n tu entorno.

events {}

http {
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;
    server_name collab.example.com;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl http2;
    server_name collab.example.com;

    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # Ajustes TLS recomendados (simplificados)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 3600s;
      proxy_send_timeout 3600s;
      proxy_pass http://127.0.0.1:1234;
    }

    # Allowlist opcional por IP (descomentar y ajustar)
    # location / {
    #   allow 10.0.0.0/8;
    #   allow 172.16.0.0/12;
    #   allow 192.168.0.0/16;
    #   deny all;
    #   proxy_http_version 1.1;
    #   proxy_set_header Upgrade $http_upgrade;
    #   proxy_set_header Connection $connection_upgrade;
    #   proxy_set_header Host $host;
    #   proxy_pass http://127.0.0.1:1234;
    # }
  }
}
